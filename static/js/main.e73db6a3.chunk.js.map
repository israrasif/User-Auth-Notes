{"version":3,"sources":["action/actions.js","components/Home.js","components/Register.js","components/Login.js","components/Account.js","components/NotesList.js","components/MyNotes.js","App.js","reducer/userReducer.js","reducer/tokenReducer.js","reducer/notesReducer.js","reducer/registerReducer.js","index.js","store/configureStore.js"],"names":["register","type","registerAction","emptyRegister","loginAction","tokenStatus","token","payload","startAccountAction","accountDetails","userData","logout","getAllNotes","allNotes","addNote","deleteNote","Home","props","Register","useState","username","setUsername","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","name","target","value","state","useSelector","registered","console","log","length","history","push","onSubmit","data","preventDefault","axios","post","then","response","alert","catch","error","message","class","onChange","placeholder","Login","useEffect","Account","userToken","accountData","userDetails","get","headers","startAccount","NotesList","notes","startNotes","map","ele","title","body","style","marginBottom","onClick","id","delete","startDeleteNote","_id","MyNotes","setTitle","setBody","attr","formData","startAddNote","withRouter","margin","to","Fragment","path","component","exact","initialValue","action","tokenReducer","notesReducer","registerReducer","store","createStore","combineReducers","userReducer","applyMiddleware","thunk","configureStore","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e73db6a3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const startRegister = (data) => {\r\n    return (dispatch) => {\r\n        axios.post('http://dct-user-auth.herokuapp.com/users/register', data)\r\n            .then((response) => {\r\n                console.log(data)\r\n                dispatch(registerAction)\r\n                dispatch(register)\r\n                alert('user registered')\r\n                console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message)\r\n            })\r\n    }\r\n}\r\n\r\nconst register = {\r\n    type: 'REGISTER_PUSH'\r\n}\r\n\r\nconst registerAction = {\r\n    type : 'REGISTER'\r\n}\r\n\r\nexport const emptyRegister = {\r\n    type: 'EMPTY'\r\n}\r\n \r\nexport const startLogin = (data) => {\r\n    return (dispatch) => {\r\n        axios.post('http://dct-user-auth.herokuapp.com/users/login', data)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                alert('logged in')\r\n                dispatch(loginAction)\r\n                dispatch(tokenStatus(response.data.token))\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message)\r\n            })\r\n        \r\n    }  \r\n}\r\n\r\nconst loginAction = {\r\n    type: 'LOGIN'\r\n}\r\n\r\nexport const tokenStatus = (token) => {\r\n    return {\r\n        type: 'TOKEN_STATUS',\r\n        payload: token\r\n    }\r\n}\r\n\r\n\r\nexport const startAccount = (token) => {\r\n    return (dispatch) => {\r\n        axios.get('http://dct-user-auth.herokuapp.com/users/account', {\r\n            headers: {\r\n                'x-auth' : token\r\n            }\r\n        })\r\n            .then((response) => {\r\n                console.log(response.data)  \r\n                dispatch(startAccountAction)\r\n                dispatch(accountDetails(response.data))\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message)\r\n            })\r\n    }\r\n}\r\n\r\nconst startAccountAction = {\r\n    type: 'START_ACCOUNT'\r\n}\r\n\r\nexport const accountDetails = (userData) => {\r\n    return {\r\n        type: 'ACCOUNT_DETAILS',\r\n        payload: userData\r\n    }\r\n}\r\n\r\nexport const logout = {\r\n    type: 'LOGOUT'\r\n}\r\n\r\nexport const startNotes = (token) => {\r\n    return (dispatch) => {\r\n        axios.get('http://dct-user-auth.herokuapp.com/api/notes', {\r\n            headers: {\r\n                'x-auth': token\r\n            }\r\n        })\r\n            .then((response) => {\r\n                dispatch(getAllNotes(response.data))\r\n                console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message)\r\n            })\r\n    }\r\n}\r\n\r\nconst getAllNotes = (allNotes) => {\r\n    return {\r\n        type: 'ALL_NOTES',\r\n        payload: allNotes\r\n    }\r\n}\r\n\r\nexport const startAddNote = (formData, token) => {\r\n    return (dispatch) => {\r\n        axios.post('http://dct-user-auth.herokuapp.com/api/notes', formData, {\r\n            headers: {\r\n                'x-auth': token\r\n            }\r\n        })\r\n            .then((response) => {\r\n                dispatch(addNote)\r\n                console.log('successfully added notes')\r\n                console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message)\r\n            })\r\n    }\r\n}\r\n\r\nconst addNote = {\r\n    type: 'ADD_NOTE'\r\n}\r\n\r\nexport const startDeleteNote = (id, token) => {\r\n    return (dispatch) => {\r\n        axios.delete(`http://dct-user-auth.herokuapp.com/api/notes/${id}`, {\r\n        headers: {\r\n            'x-auth': token\r\n        }\r\n        })\r\n        .then((response) => {\r\n            const result = response.data\r\n            dispatch(deleteNote)\r\n        })\r\n        .catch((error) => {\r\n            alert(error.message)\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteNote = {\r\n    type: 'DELETE_NOTE'\r\n}\r\n","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Home Component</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React,{useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {startRegister} from '../action/actions'\r\n\r\nconst Register = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n\r\n        if(name === 'username') {\r\n            setUsername(e.target.value)\r\n        }\r\n        else if(name === 'email') {\r\n            setEmail(e.target.value)\r\n        }\r\n        else if(name === 'password') {\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const state = useSelector((state) => {\r\n        return state.registered\r\n    }) \r\n\r\n    console.log(state)\r\n\r\n    if(state.length) {\r\n        props.history.push('/login')\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = {\r\n            username : username,\r\n            email: email,\r\n            password: password\r\n        }\r\n        dispatch(startRegister(formData))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register with us</h2>\r\n            <form onSubmit={handleSubmit} class='form-group'>\r\n                <input \r\n                    class='form-control'\r\n                    type='text' \r\n                    value={username} \r\n                    onChange={handleChange} \r\n                    name='username'\r\n                    placeholder='username'\r\n                    /> <br />\r\n                <input \r\n                    class='form-control'                   \r\n                    type='text' \r\n                    value={email} \r\n                    onChange={handleChange} \r\n                    name='email'\r\n                    placeholder='email'\r\n                    /> <br />\r\n                <input \r\n                    class='form-control'\r\n                    type='text' \r\n                    value={password} \r\n                    onChange={handleChange} \r\n                    name='password'\r\n                    placeholder='password'\r\n                    /> <br />\r\n                <button type='submit' class='btn btn-success'>submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React,{useState, useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {startLogin, emptyRegister} from '../action/actions'\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(emptyRegister)\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n\r\n        if(name === 'email') {\r\n            setEmail(e.target.value)\r\n        }\r\n        else if(name === 'password') {\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = {\r\n            email: email,\r\n            password: password\r\n        }\r\n\r\n        dispatch(startLogin(formData))\r\n        props.history.push('/')\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit} class='form-group'>\r\n                <input \r\n                    class='form-control'\r\n                    type='text' \r\n                    value={email} \r\n                    onChange={handleChange} \r\n                    name='email'\r\n                    placeholder='email'\r\n                    /> <br />\r\n                <input \r\n                    class='form-control'\r\n                    type='text' \r\n                    value={password} \r\n                    onChange={handleChange} \r\n                    name='password'\r\n                    placeholder='password'\r\n                    /> <br />\r\n                <button class='btn btn-success' type='submit'>submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React,{useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {startAccount} from '../action/actions'\r\n\r\nconst Account = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector((state) => {\r\n        return state.userToken\r\n    })\r\n    const accountData = useSelector((state) => {\r\n        return state.userDetails\r\n    })    \r\n\r\n    useEffect(() => {\r\n        dispatch(startAccount(token))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>user name- {accountData.username}</h3>\r\n            <h3>email- {accountData.email}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account","import React,{useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {startNotes, startDeleteNote} from '../action/actions'\r\n\r\nconst NotesList = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector((state) => {\r\n        return state.userToken\r\n    }) \r\n    const notes = useSelector((state) => {\r\n        return state.notes\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(startNotes(token))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Notes List</h3>\r\n            <h4>Total Notes - {notes.length}</h4>\r\n            <ul>\r\n                {notes.map((ele) => {\r\n                    return (\r\n                            <li \r\n                                key={ele._id}>\r\n                                    {ele.title} - \r\n                                    {ele.body}\r\n                                <button \r\n                                    class='btn btn-danger' \r\n                                    style={{ marginBottom: '3px'}}\r\n                                    onClick={\r\n                                    () => {\r\n                                        dispatch(startDeleteNote(ele._id, token))\r\n                                    }\r\n                                }>x</button>\r\n                            </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList","import React,{useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport NotesList from './NotesList'\r\nimport {startAddNote} from '../action/actions'\r\n\r\nconst MyNotes = (props) => {\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n\r\n    const token = useSelector((state) => {\r\n        return state.userToken\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        const attr = e.target.name\r\n\r\n        if(attr === 'title') {\r\n            setTitle(e.target.value)\r\n        }\r\n        else if (attr === 'body') {\r\n            setBody(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const formData = {\r\n            title: title, \r\n            body: body\r\n        }\r\n        dispatch(startAddNote(formData, token))\r\n        props.history.push('/myNotes')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>My Notes</h2>\r\n            <h3>Add note</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class='form-group'>\r\n                    <input \r\n                        class='form-control'\r\n                        type='text' \r\n                        value={title} \r\n                        onChange={handleChange}\r\n                        name = 'title'\r\n                        placeholder = 'title'\r\n                        /> <br />\r\n                    <textarea\r\n                        class='form-control'\r\n                        type='textarea' \r\n                        value={body} \r\n                        onChange={handleChange} \r\n                        name = 'body'\r\n                        placeholder = 'note body'\r\n                        /> <br />\r\n                    <button class='btn btn-success' type='submit'>save</button>\r\n                </div>\r\n            </form>\r\n\r\n            <NotesList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNotes","import React from 'react'\nimport {Link, Route, withRouter} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport {logout} from './action/actions'\nimport Home from './components/Home'\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport Account from './components/Account'\nimport MyNotes from './components/MyNotes'\n\nconst App = (props) => {\n  const dispatch = useDispatch()\n\n  const token = useSelector((state) => {\n    return state.userToken\n  })\n  console.log(token)\n\n  return (\n    <div class='container'>\n      <h1>User Auth - Redux</h1>\n      <ul>\n        <li class='btn btn-warning' style={{margin : '5px'}}><Link to='/'>Home</Link></li>\n        {!token.length ? \n          (<>{/*shortcut for react.fragment*/}\n            <li class='btn btn-warning'  style={{margin : '5px'}}><Link to='/register'>Register</Link></li>\n            <li class='btn btn-warning' style={{margin : '5px'}}><Link to='/login'>Login</Link></li>\n          </>) : (\n            <React.Fragment>\n              <li class='btn btn-warning' style={{margin : '5px'}}><Link to='/account'>Account</Link></li>\n              <li class='btn btn-warning' style={{margin : '5px'}}><Link to='/myNotes'>My Notes</Link></li>\n              <li class='btn btn-warning' style={{margin : '5px'}}><Link to='/' onClick={() => {\n                props.history.push('/')\n                dispatch(logout)\n                alert('user logged out')\n              }}\n              >Logout</Link></li>\n            </React.Fragment>\n          )\n        }\n      </ul>\n\n      <Route path='/' component={Home} exact={true}/> \n      <Route path='/register' component={Register}/> \n      <Route path='/login' component={Login}/> \n      <Route path='/account' component={Account}/>\n      <Route path='/myNotes' component={MyNotes}/>\n    </div> \n  )\n}\n\nexport default withRouter(App)","const initialValue = {}\r\n\r\nconst userDetails = (state = initialValue, action) => {\r\n    switch (action.type) {\r\n        case 'ACCOUNT_DETAILS' : {\r\n            return action.payload\r\n        }\r\n\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default userDetails\r\n\r\n","const initialState = ''\r\n\r\nconst tokenReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'TOKEN_STATUS' : {\r\n            return action.payload\r\n        }\r\n\r\n        case 'LOGOUT' : {\r\n            return ''\r\n        }\r\n\r\n        default : { \r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default tokenReducer","const initialValue = []\r\n\r\nconst notesReducer = (state = initialValue, action) => {\r\n    switch(action.type){\r\n        case 'ALL_NOTES' : {\r\n            return action.payload\r\n        }\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default notesReducer","const initialValue = ''\r\n\r\nconst registerReducer = (state = initialValue, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'REGISTER_PUSH' : {\r\n            return 'registered'\r\n        }\r\n\r\n        case 'EMPTY' : {\r\n            return ''\r\n        }\r\n\r\n        default : {\r\n            return state\r\n        }\r\n    }\r\n} \r\n\r\nexport default registerReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore()\n\nstore.subscribe(() => {\n  store.getState()\n})\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n","import userReducer from '../reducer/userReducer'\r\nimport tokenReducer from '../reducer/tokenReducer'\r\nimport notesReducer from '../reducer/notesReducer'\r\nimport registerReducer from '../reducer/registerReducer'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux'\r\n\r\nconst configureStore = () => {\r\n\r\n    const store = createStore(combineReducers({\r\n        userDetails: userReducer,\r\n        userToken: tokenReducer,\r\n        notes: notesReducer,\r\n        registered: registerReducer\r\n    }), applyMiddleware(thunk))\r\n    return store\r\n}\r\n\r\nexport default configureStore"],"sourceRoot":""}